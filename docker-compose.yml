services:
  map:
    image: zubrailx/cws-map-runner:debug-latest
    ports:
      - "6000:8000"

  mongo:
    image: mongo:6.0.5-jammy
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - type: tmpfs
        target: /data/db

  mongo-express:
    depends_on:
      - mongo
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  mosquitto:
    image: eclipse-mosquitto:2.0.5
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mosquitto-data:/mosquitto/data
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf

  api:
    depends_on:
      - mongo
      - mosquitto
    build:
      context: .
      dockerfile: Dockerfile
      args:
        FOLDER: app
    image: iot-mwhs/spheraphore
    restart: always
    command:
      - "--reload"
    ports:
      - "8000:8000"
    volumes:
      - ./backend/common:/backend/common
      - ./backend/app:/backend/app
    environment:
      WATCHFILES_FORCE_POLLING: true
      MONGODB_URL: mongodb://root:example@mongo:27017/
      MOSQUITTO_HOST: mosquitto

  echo:
    profiles:
      - echo
    depends_on:
      - mosquitto
    build:
      context: .
      dockerfile: Dockerfile
      args:
        FOLDER: devices
    image: iot-mwhs/spheraphore
    restart: always
    entrypoint: python -m devices.echo
    volumes:
      - ./backend/common:/backend/common
      - ./backend/devices:/backend/devices
    environment:
      PYTHONBUFFERED: true
      MOSQUITTO_HOST: mosquitto

  temperature:
    profiles:
      - temperature
    depends_on:
      - mosquitto
    build:
      context: .
      dockerfile: Dockerfile
      args:
        FOLDER: devices
    image: iot-mwhs/spheraphore
    restart: always
    entrypoint: python -m devices.temperature
    volumes:
      - ./backend/common:/backend/common
      - ./backend/devices:/backend/devices
    environment:
      PYTHONBUFFERED: true
      MOSQUITTO_HOST: mosquitto

  illumination:
    profiles:
      - illumination
    depends_on:
      - mosquitto
    build:
      context: .
      dockerfile: Dockerfile
      args:
        FOLDER: devices
    image: iot-mwhs/spheraphore
    restart: always
    entrypoint: python -m devices.illumination
    volumes:
      - ./backend/common:/backend/common
      - ./backend/devices:/backend/devices
    environment:
      PYTHONBUFFERED: true
      MOSQUITTO_HOST: mosquitto

volumes:
  mosquitto-data:
